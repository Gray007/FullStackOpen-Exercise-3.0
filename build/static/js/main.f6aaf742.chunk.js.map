{"version":3,"sources":["components/Heading.js","components/Input.js","components/Search.js","components/AddContact.js","components/Entry.js","components/List.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Heading","text","Input","newValue","handleChange","value","onChange","Search","newFilter","handleFilterChange","AddContact","addNameNumber","newName","newNumber","handleNumberChange","handleNameChange","onSubmit","type","Entry","person","deleteContact","name","number","onClick","List","persons","filter","filterRegex","RegExp","match","map","indexOf","id","Notification","message","className","baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","deletePerson","delete","update","put","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","personService","initialPersons","event","target","preventDefault","nameCheck","Object","values","length","window","alert","duplicateNameReplaceNumber","confirm","find","n","updatedPerson","returnedPerson","setTimeout","catch","error","newList","p","console","log","personObject","concat","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6aaf742.chunk.js","sourcesContent":["// import React, { useState } from 'react'\r\nimport React from 'react'\r\n\r\nconst Heading = ({ text }) => <h2>{text}</h2>\r\n\r\nexport default Heading","import React from 'react'\r\n\r\nconst Input = ({ text, newValue, handleChange}) => (\r\n    <div>\r\n        {text}: \r\n        <input \r\n        value={newValue}\r\n        onChange={handleChange}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default Input","import React from 'react'\r\nimport Heading from './Heading'\r\nimport Input from './Input'\r\n\r\nconst Search = ({ newFilter, handleFilterChange}) => {\r\n    return (\r\n      <div>\r\n        <Heading text={'Phonebook'}/>\r\n        <Input text={'Filter by name'} newValue={newFilter} handleChange={handleFilterChange} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport Heading from './Heading'\r\nimport Input from './Input'\r\n\r\nconst AddContact = ({ addNameNumber, newName, newNumber, handleNumberChange, handleNameChange }) => {\r\n    return (\r\n        <div>\r\n            <Heading text={'Add Contact'}/>\r\n            <form onSubmit={addNameNumber}>\r\n                <Input text={'Name'} newValue={newName} handleChange={handleNameChange} />\r\n                <Input text={'Number'} newValue={newNumber} handleChange={handleNumberChange} />\r\n                <div>\r\n                <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddContact","import React from 'react'\r\n\r\nconst Entry = ({ person, deleteContact }) => {\r\n    return (\r\n        <li>\r\n            {person.name} : {person.number}\r\n            <button onClick={deleteContact}>Delete</button> \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Entry","import React from 'react'\r\nimport Heading from './Heading'\r\nimport Entry from './Entry'\r\n\r\nconst List = ({ persons, filter, deleteContact }) => {\r\nlet filterRegex = new RegExp(filter, \"gi\")\r\n    return (\r\n        <div>\r\n            <Heading text={'Numbers'}/>\r\n            <ul>\r\n                {persons\r\n                .filter(person => person.name\r\n                .match(filterRegex))\r\n                .map(person => \r\n                <Entry key={person.id} person={person} deleteContact={() => deleteContact(persons.indexOf(person))} />\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={type}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst exportedObject = { getAll, create, deletePerson, update }\r\n\r\nexport default exportedObject","import React, { useState, useEffect } from 'react'\r\nimport Search from './components/Search'\r\nimport AddContact from './components/AddContact'\r\nimport List from './components/List'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ newFilter, setNewFilter] = useState('')\r\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\r\n  const [ notificationType, setNotificationType] = useState('')\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const addNameNumber = (event) => {\r\n    event.preventDefault()\r\n    const nameCheck = persons.filter(person => Object.values(person).indexOf(newName) > -1)\r\n    const numberCheck = persons.filter(person => Object.values(person).indexOf(newNumber) > -1)\r\n\r\n    if (numberCheck.length > 0) {\r\n      window.alert(`${newNumber} has already been added to the phonebook.`)\r\n    } else if (nameCheck.length > 0) {\r\n      const duplicateNameReplaceNumber = `${newName} has already been added to the phonebook, replace the old number with this new one?`\r\n      const updateNumber = window.confirm(duplicateNameReplaceNumber);\r\n      \r\n      if (updateNumber) {\r\n        const name = persons.find(n => n.name === newName)\r\n        const updatedPerson = {...name, number: newNumber}\r\n          \r\n        personService\r\n          .update(name.id, updatedPerson)\r\n            .then(returnedPerson => {\r\n            setPersons(persons.map(person => person.name !== newName ? person : returnedPerson))\r\n            setNotificationType('notification')\r\n            setNotificationMessage(\r\n              `'${newName}' has been updated with the new number '${newNumber}'`\r\n            )\r\n            setTimeout(() => {\r\n              setNotificationMessage(null)\r\n            }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setNotificationType('error')\r\n            setNotificationMessage(\r\n              `'${newName}' has been removed from the server`\r\n            )\r\n            setTimeout(() => {\r\n              setNotificationMessage(null)\r\n            }, 5000)\r\n            const newList = persons.filter(p => p.name !== newName)\r\n            console.log(newList)\r\n            setPersons(newList)\r\n          })\r\n      }\r\n    } else {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNotificationType('notification')\r\n          setNotificationMessage(\r\n            `'${newName}' was added to the phone book`\r\n          )\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data)\r\n          setNotificationType('error')\r\n          setNotificationMessage(\r\n            `${error.response.data.error}`\r\n          )\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n        })\r\n    }   \r\n  }\r\n\r\n  const deleteContact = (index) => {\r\n    const person = persons[index]\r\n    const message = `Delete ${person.name}?`\r\n    const deleteConfirm = window.confirm(message);\r\n    if (deleteConfirm) {\r\n      personService\r\n        .deletePerson(person.id)\r\n        .then(() => {\r\n          const newList = persons.filter(p => persons.indexOf(p) !== index)\r\n          setPersons(newList)\r\n          setNotificationType('error')\r\n          setNotificationMessage(\r\n            `'${person.name}' was deleted from the phone book`\r\n          )\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={notificationMessage} type={notificationType}/>\r\n      <Search \r\n        newFilter={newFilter}\r\n        handleFilterChange={handleFilterChange}\r\n      />\r\n      <AddContact \r\n        addNameNumber={addNameNumber} \r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNumberChange={handleNumberChange} \r\n        handleNameChange={handleNameChange}\r\n      />\r\n      <List \r\n        persons={persons} \r\n        filter={newFilter} \r\n        deleteContact={deleteContact} \r\n      />   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}